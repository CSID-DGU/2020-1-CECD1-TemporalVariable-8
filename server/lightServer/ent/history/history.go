// Code generated by entc, DO NOT EDIT.

package history

const (
	// Label holds the string label denoting the history type in the database.
	Label = "history"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOpenAt holds the string denoting the open_at field in the database.
	FieldOpenAt = "open_at"
	// FieldCloseAt holds the string denoting the close_at field in the database.
	FieldCloseAt = "close_at"

	// EdgeOf holds the string denoting the of edge name in mutations.
	EdgeOf = "of"

	// Table holds the table name of the history in the database.
	Table = "histories"
	// OfTable is the table the holds the of relation/edge. The primary key declared below.
	OfTable = "restaurant_histories"
	// OfInverseTable is the table name for the Restaurant entity.
	// It exists in this package in order to avoid circular dependency with the "restaurant" package.
	OfInverseTable = "restaurants"
)

// Columns holds all SQL columns for history fields.
var Columns = []string{
	FieldID,
	FieldOpenAt,
	FieldCloseAt,
}

var (
	// OfPrimaryKey and OfColumn2 are the table columns denoting the
	// primary key for the of relation (M2M).
	OfPrimaryKey = []string{"restaurant_id", "history_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
