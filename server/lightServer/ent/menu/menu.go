// Code generated by entc, DO NOT EDIT.

package menu

const (
	// Label holds the string label denoting the menu type in the database.
	Label = "menu"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"

	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// EdgeImages holds the string denoting the images edge name in mutations.
	EdgeImages = "images"
	// EdgeOptions holds the string denoting the options edge name in mutations.
	EdgeOptions = "options"

	// Table holds the table name of the menu in the database.
	Table = "menus"
	// OwnerTable is the table the holds the owner relation/edge.
	OwnerTable = "menus"
	// OwnerInverseTable is the table name for the Restaurant entity.
	// It exists in this package in order to avoid circular dependency with the "restaurant" package.
	OwnerInverseTable = "restaurants"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "menu_owner"
	// ImagesTable is the table the holds the images relation/edge.
	ImagesTable = "files"
	// ImagesInverseTable is the table name for the File entity.
	// It exists in this package in order to avoid circular dependency with the "file" package.
	ImagesInverseTable = "files"
	// ImagesColumn is the table column denoting the images relation/edge.
	ImagesColumn = "menu_images"
	// OptionsTable is the table the holds the options relation/edge. The primary key declared below.
	OptionsTable = "menu_options"
)

// Columns holds all SQL columns for menu fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldDescription,
	FieldPrice,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Menu type.
var ForeignKeys = []string{
	"category_menus",
	"menu_owner",
	"order_field_menu",
}

var (
	// OptionsPrimaryKey and OptionsColumn2 are the table columns denoting the
	// primary key for the options relation (M2M).
	OptionsPrimaryKey = []string{"menu_id", "option_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
