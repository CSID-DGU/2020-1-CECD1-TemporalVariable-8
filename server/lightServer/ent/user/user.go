// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"

	// EdgeAuths holds the string denoting the auths edge name in mutations.
	EdgeAuths = "auths"

	// Table holds the table name of the user in the database.
	Table = "users"
	// AuthsTable is the table the holds the auths relation/edge.
	AuthsTable = "authorizes"
	// AuthsInverseTable is the table name for the Authorize entity.
	// It exists in this package in order to avoid circular dependency with the "authorize" package.
	AuthsInverseTable = "authorizes"
	// AuthsColumn is the table column denoting the auths relation/edge.
	AuthsColumn = "user_auths"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldAddress,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
