// Code generated by entc, DO NOT EDIT.

package authorize

import (
	"fmt"
)

const (
	// Label holds the string label denoting the authorize type in the database.
	Label = "authorize"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldProvider holds the string denoting the provider field in the database.
	FieldProvider = "provider"
	// FieldServiceID holds the string denoting the service_id field in the database.
	FieldServiceID = "service_id"

	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"

	// Table holds the table name of the authorize in the database.
	Table = "authorizes"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "authorizes"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_auths"
)

// Columns holds all SQL columns for authorize fields.
var Columns = []string{
	FieldID,
	FieldProvider,
	FieldServiceID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Authorize type.
var ForeignKeys = []string{
	"user_auths",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// ServiceIDValidator is a validator for the "service_id" field. It is called by the builders before save.
	ServiceIDValidator func(string) error
)

// Provider defines the type for the provider enum field.
type Provider string

// Provider values.
const (
	ProviderGoogle   Provider = "google"
	ProviderFacebook Provider = "facebook"
	ProviderTweeter  Provider = "tweeter"
	ProviderNaver    Provider = "naver"
	ProviderDaum     Provider = "daum"
)

func (pr Provider) String() string {
	return string(pr)
}

// ProviderValidator is a validator for the "provider" field enum values. It is called by the builders before save.
func ProviderValidator(pr Provider) error {
	switch pr {
	case ProviderGoogle, ProviderFacebook, ProviderTweeter, ProviderNaver, ProviderDaum:
		return nil
	default:
		return fmt.Errorf("authorize: invalid enum value for provider field: %q", pr)
	}
}
