// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// AuthorizesColumns holds the columns for the "authorizes" table.
	AuthorizesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "provider", Type: field.TypeEnum, Enums: []string{"google", "facebook", "tweeter", "naver", "daum"}},
		{Name: "service_id", Type: field.TypeString},
		{Name: "user_auths", Type: field.TypeInt, Nullable: true},
	}
	// AuthorizesTable holds the schema information for the "authorizes" table.
	AuthorizesTable = &schema.Table{
		Name:       "authorizes",
		Columns:    AuthorizesColumns,
		PrimaryKey: []*schema.Column{AuthorizesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "authorizes_users_auths",
				Columns: []*schema.Column{AuthorizesColumns[3]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "authorize_provider_service_id",
				Unique:  true,
				Columns: []*schema.Column{AuthorizesColumns[1], AuthorizesColumns[2]},
			},
		},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "category_owner", Type: field.TypeInt, Nullable: true},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "categories_restaurants_owner",
				Columns: []*schema.Column{CategoriesColumns[2]},

				RefColumns: []*schema.Column{RestaurantsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "category_name_category_owner",
				Unique:  false,
				Columns: []*schema.Column{CategoriesColumns[1], CategoriesColumns[2]},
			},
		},
	}
	// FilesColumns holds the columns for the "files" table.
	FilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "file_id", Type: field.TypeUUID},
		{Name: "mime", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "create_at", Type: field.TypeTime},
	}
	// FilesTable holds the schema information for the "files" table.
	FilesTable = &schema.Table{
		Name:        "files",
		Columns:     FilesColumns,
		PrimaryKey:  []*schema.Column{FilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
		Indexes: []*schema.Index{
			{
				Name:    "file_file_id_mime",
				Unique:  true,
				Columns: []*schema.Column{FilesColumns[1], FilesColumns[2]},
			},
		},
	}
	// HistoriesColumns holds the columns for the "histories" table.
	HistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "open_at", Type: field.TypeTime},
		{Name: "close_at", Type: field.TypeTime},
	}
	// HistoriesTable holds the schema information for the "histories" table.
	HistoriesTable = &schema.Table{
		Name:        "histories",
		Columns:     HistoriesColumns,
		PrimaryKey:  []*schema.Column{HistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// MenusColumns holds the columns for the "menus" table.
	MenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "is_option", Type: field.TypeBool},
		{Name: "price", Type: field.TypeJSON, Nullable: true},
		{Name: "menu_owner", Type: field.TypeInt, Nullable: true},
		{Name: "menu_images", Type: field.TypeInt, Nullable: true},
	}
	// MenusTable holds the schema information for the "menus" table.
	MenusTable = &schema.Table{
		Name:       "menus",
		Columns:    MenusColumns,
		PrimaryKey: []*schema.Column{MenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "menus_restaurants_owner",
				Columns: []*schema.Column{MenusColumns[5]},

				RefColumns: []*schema.Column{RestaurantsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "menus_files_images",
				Columns: []*schema.Column{MenusColumns[6]},

				RefColumns: []*schema.Column{FilesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "order_at", Type: field.TypeTime},
		{Name: "cooking_at", Type: field.TypeTime, Nullable: true},
		{Name: "deliver_at", Type: field.TypeTime, Nullable: true},
		{Name: "complete_at", Type: field.TypeTime, Nullable: true},
		{Name: "order_who", Type: field.TypeInt, Nullable: true},
		{Name: "order_where", Type: field.TypeInt, Nullable: true},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "orders_users_who",
				Columns: []*schema.Column{OrdersColumns[5]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "orders_restaurants_where",
				Columns: []*schema.Column{OrdersColumns[6]},

				RefColumns: []*schema.Column{RestaurantsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderFieldsColumns holds the columns for the "order_fields" table.
	OrderFieldsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "count", Type: field.TypeUint16},
		{Name: "order_items", Type: field.TypeInt, Nullable: true},
		{Name: "order_field_menu", Type: field.TypeInt, Nullable: true},
	}
	// OrderFieldsTable holds the schema information for the "order_fields" table.
	OrderFieldsTable = &schema.Table{
		Name:       "order_fields",
		Columns:    OrderFieldsColumns,
		PrimaryKey: []*schema.Column{OrderFieldsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "order_fields_orders_items",
				Columns: []*schema.Column{OrderFieldsColumns[2]},

				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "order_fields_menus_menu",
				Columns: []*schema.Column{OrderFieldsColumns[3]},

				RefColumns: []*schema.Column{MenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RestaurantsColumns holds the columns for the "restaurants" table.
	RestaurantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "uri", Type: field.TypeString, Nullable: true},
		{Name: "restaurant_owner", Type: field.TypeInt, Nullable: true},
		{Name: "restaurant_avatar", Type: field.TypeInt, Nullable: true},
		{Name: "restaurant_root", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "restaurant_parent", Type: field.TypeInt, Nullable: true},
	}
	// RestaurantsTable holds the schema information for the "restaurants" table.
	RestaurantsTable = &schema.Table{
		Name:       "restaurants",
		Columns:    RestaurantsColumns,
		PrimaryKey: []*schema.Column{RestaurantsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "restaurants_users_owner",
				Columns: []*schema.Column{RestaurantsColumns[4]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "restaurants_files_avatar",
				Columns: []*schema.Column{RestaurantsColumns[5]},

				RefColumns: []*schema.Column{FilesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "restaurants_restaurants_root",
				Columns: []*schema.Column{RestaurantsColumns[6]},

				RefColumns: []*schema.Column{RestaurantsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "restaurants_restaurants_parent",
				Columns: []*schema.Column{RestaurantsColumns[7]},

				RefColumns: []*schema.Column{RestaurantsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ReviewsColumns holds the columns for the "reviews" table.
	ReviewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "write_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "contents", Type: field.TypeString},
		{Name: "is_delete", Type: field.TypeBool},
		{Name: "review_order", Type: field.TypeInt, Nullable: true},
	}
	// ReviewsTable holds the schema information for the "reviews" table.
	ReviewsTable = &schema.Table{
		Name:       "reviews",
		Columns:    ReviewsColumns,
		PrimaryKey: []*schema.Column{ReviewsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "reviews_orders_order",
				Columns: []*schema.Column{ReviewsColumns[5]},

				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CategoryMenusColumns holds the columns for the "category_menus" table.
	CategoryMenusColumns = []*schema.Column{
		{Name: "category_id", Type: field.TypeInt},
		{Name: "menu_id", Type: field.TypeInt},
	}
	// CategoryMenusTable holds the schema information for the "category_menus" table.
	CategoryMenusTable = &schema.Table{
		Name:       "category_menus",
		Columns:    CategoryMenusColumns,
		PrimaryKey: []*schema.Column{CategoryMenusColumns[0], CategoryMenusColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "category_menus_category_id",
				Columns: []*schema.Column{CategoryMenusColumns[0]},

				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "category_menus_menu_id",
				Columns: []*schema.Column{CategoryMenusColumns[1]},

				RefColumns: []*schema.Column{MenusColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MenuOptionsColumns holds the columns for the "menu_options" table.
	MenuOptionsColumns = []*schema.Column{
		{Name: "menu_id", Type: field.TypeInt},
		{Name: "option_id", Type: field.TypeInt},
	}
	// MenuOptionsTable holds the schema information for the "menu_options" table.
	MenuOptionsTable = &schema.Table{
		Name:       "menu_options",
		Columns:    MenuOptionsColumns,
		PrimaryKey: []*schema.Column{MenuOptionsColumns[0], MenuOptionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "menu_options_menu_id",
				Columns: []*schema.Column{MenuOptionsColumns[0]},

				RefColumns: []*schema.Column{MenusColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "menu_options_option_id",
				Columns: []*schema.Column{MenuOptionsColumns[1]},

				RefColumns: []*schema.Column{MenusColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RestaurantHistoriesColumns holds the columns for the "restaurant_histories" table.
	RestaurantHistoriesColumns = []*schema.Column{
		{Name: "restaurant_id", Type: field.TypeInt},
		{Name: "history_id", Type: field.TypeInt},
	}
	// RestaurantHistoriesTable holds the schema information for the "restaurant_histories" table.
	RestaurantHistoriesTable = &schema.Table{
		Name:       "restaurant_histories",
		Columns:    RestaurantHistoriesColumns,
		PrimaryKey: []*schema.Column{RestaurantHistoriesColumns[0], RestaurantHistoriesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "restaurant_histories_restaurant_id",
				Columns: []*schema.Column{RestaurantHistoriesColumns[0]},

				RefColumns: []*schema.Column{RestaurantsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "restaurant_histories_history_id",
				Columns: []*schema.Column{RestaurantHistoriesColumns[1]},

				RefColumns: []*schema.Column{HistoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuthorizesTable,
		CategoriesTable,
		FilesTable,
		HistoriesTable,
		MenusTable,
		OrdersTable,
		OrderFieldsTable,
		RestaurantsTable,
		ReviewsTable,
		UsersTable,
		CategoryMenusTable,
		MenuOptionsTable,
		RestaurantHistoriesTable,
	}
)

func init() {
	AuthorizesTable.ForeignKeys[0].RefTable = UsersTable
	CategoriesTable.ForeignKeys[0].RefTable = RestaurantsTable
	MenusTable.ForeignKeys[0].RefTable = RestaurantsTable
	MenusTable.ForeignKeys[1].RefTable = FilesTable
	OrdersTable.ForeignKeys[0].RefTable = UsersTable
	OrdersTable.ForeignKeys[1].RefTable = RestaurantsTable
	OrderFieldsTable.ForeignKeys[0].RefTable = OrdersTable
	OrderFieldsTable.ForeignKeys[1].RefTable = MenusTable
	RestaurantsTable.ForeignKeys[0].RefTable = UsersTable
	RestaurantsTable.ForeignKeys[1].RefTable = FilesTable
	RestaurantsTable.ForeignKeys[2].RefTable = RestaurantsTable
	RestaurantsTable.ForeignKeys[3].RefTable = RestaurantsTable
	ReviewsTable.ForeignKeys[0].RefTable = OrdersTable
	CategoryMenusTable.ForeignKeys[0].RefTable = CategoriesTable
	CategoryMenusTable.ForeignKeys[1].RefTable = MenusTable
	MenuOptionsTable.ForeignKeys[0].RefTable = MenusTable
	MenuOptionsTable.ForeignKeys[1].RefTable = MenusTable
	RestaurantHistoriesTable.ForeignKeys[0].RefTable = RestaurantsTable
	RestaurantHistoriesTable.ForeignKeys[1].RefTable = HistoriesTable
}
